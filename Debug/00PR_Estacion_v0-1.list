
00PR_Estacion_v0-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b94  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000009c  08000d40  08000d40  00010d40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000ddc  08000ddc  00010ddc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000de0  08000de0  00010de0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  00010de4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  00010de4  2**0
                  CONTENTS
  7 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
  8 ._user_heap_stack 00000400  2000001c  2000001c  00020000  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  00010de4  2**0
                  CONTENTS, READONLY
 10 .debug_info   00003a68  00000000  00000000  00010e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000009cf  00000000  00000000  0001487c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000003f0  00000000  00000000  00015250  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000388  00000000  00000000  00015640  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00001861  00000000  00000000  000159c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00001634  00000000  00000000  00017229  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  0001885d  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000ff4  00000000  00000000  000188dc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000d28 	.word	0x08000d28

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000d28 	.word	0x08000d28

080001ec <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b087      	sub	sp, #28
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
 80001f4:	6039      	str	r1, [r7, #0]
  uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 80001f6:	2300      	movs	r3, #0
 80001f8:	617b      	str	r3, [r7, #20]
 80001fa:	2300      	movs	r3, #0
 80001fc:	613b      	str	r3, [r7, #16]
 80001fe:	2300      	movs	r3, #0
 8000200:	60fb      	str	r3, [r7, #12]
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));

  /* ------------------------- Configure the port pins ---------------- */
  /*-- GPIO Mode Configuration --*/
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 8000202:	2300      	movs	r3, #0
 8000204:	617b      	str	r3, [r7, #20]
 8000206:	e076      	b.n	80002f6 <GPIO_Init+0x10a>
  {
    pos = ((uint32_t)0x01) << pinpos;
 8000208:	2201      	movs	r2, #1
 800020a:	697b      	ldr	r3, [r7, #20]
 800020c:	fa02 f303 	lsl.w	r3, r2, r3
 8000210:	613b      	str	r3, [r7, #16]
    /* Get the port pins position */
    currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 8000212:	683b      	ldr	r3, [r7, #0]
 8000214:	681a      	ldr	r2, [r3, #0]
 8000216:	693b      	ldr	r3, [r7, #16]
 8000218:	4013      	ands	r3, r2
 800021a:	60fb      	str	r3, [r7, #12]

    if (currentpin == pos)
 800021c:	68fa      	ldr	r2, [r7, #12]
 800021e:	693b      	ldr	r3, [r7, #16]
 8000220:	429a      	cmp	r2, r3
 8000222:	d165      	bne.n	80002f0 <GPIO_Init+0x104>
    {
      GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	681a      	ldr	r2, [r3, #0]
 8000228:	697b      	ldr	r3, [r7, #20]
 800022a:	005b      	lsls	r3, r3, #1
 800022c:	2103      	movs	r1, #3
 800022e:	fa01 f303 	lsl.w	r3, r1, r3
 8000232:	43db      	mvns	r3, r3
 8000234:	401a      	ands	r2, r3
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	601a      	str	r2, [r3, #0]
      GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	681a      	ldr	r2, [r3, #0]
 800023e:	683b      	ldr	r3, [r7, #0]
 8000240:	791b      	ldrb	r3, [r3, #4]
 8000242:	4619      	mov	r1, r3
 8000244:	697b      	ldr	r3, [r7, #20]
 8000246:	005b      	lsls	r3, r3, #1
 8000248:	fa01 f303 	lsl.w	r3, r1, r3
 800024c:	431a      	orrs	r2, r3
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	601a      	str	r2, [r3, #0]

      if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
 8000252:	683b      	ldr	r3, [r7, #0]
 8000254:	791b      	ldrb	r3, [r3, #4]
 8000256:	2b01      	cmp	r3, #1
 8000258:	d003      	beq.n	8000262 <GPIO_Init+0x76>
 800025a:	683b      	ldr	r3, [r7, #0]
 800025c:	791b      	ldrb	r3, [r3, #4]
 800025e:	2b02      	cmp	r3, #2
 8000260:	d12e      	bne.n	80002c0 <GPIO_Init+0xd4>
      {
        /* Check Speed mode parameters */
        assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));

        /* Speed mode configuration */
        GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	689a      	ldr	r2, [r3, #8]
 8000266:	697b      	ldr	r3, [r7, #20]
 8000268:	005b      	lsls	r3, r3, #1
 800026a:	2103      	movs	r1, #3
 800026c:	fa01 f303 	lsl.w	r3, r1, r3
 8000270:	43db      	mvns	r3, r3
 8000272:	401a      	ands	r2, r3
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	609a      	str	r2, [r3, #8]
        GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	689a      	ldr	r2, [r3, #8]
 800027c:	683b      	ldr	r3, [r7, #0]
 800027e:	795b      	ldrb	r3, [r3, #5]
 8000280:	4619      	mov	r1, r3
 8000282:	697b      	ldr	r3, [r7, #20]
 8000284:	005b      	lsls	r3, r3, #1
 8000286:	fa01 f303 	lsl.w	r3, r1, r3
 800028a:	431a      	orrs	r2, r3
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	609a      	str	r2, [r3, #8]

        /* Check Output mode parameters */
        assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));

        /* Output mode configuration*/
        GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	685a      	ldr	r2, [r3, #4]
 8000294:	697b      	ldr	r3, [r7, #20]
 8000296:	b29b      	uxth	r3, r3
 8000298:	4619      	mov	r1, r3
 800029a:	2301      	movs	r3, #1
 800029c:	408b      	lsls	r3, r1
 800029e:	43db      	mvns	r3, r3
 80002a0:	401a      	ands	r2, r3
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	605a      	str	r2, [r3, #4]
        GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	685b      	ldr	r3, [r3, #4]
 80002aa:	683a      	ldr	r2, [r7, #0]
 80002ac:	7992      	ldrb	r2, [r2, #6]
 80002ae:	4611      	mov	r1, r2
 80002b0:	697a      	ldr	r2, [r7, #20]
 80002b2:	b292      	uxth	r2, r2
 80002b4:	fa01 f202 	lsl.w	r2, r1, r2
 80002b8:	b292      	uxth	r2, r2
 80002ba:	431a      	orrs	r2, r3
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	605a      	str	r2, [r3, #4]
      }

      /* Pull-up Pull down resistor configuration*/
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	68da      	ldr	r2, [r3, #12]
 80002c4:	697b      	ldr	r3, [r7, #20]
 80002c6:	b29b      	uxth	r3, r3
 80002c8:	005b      	lsls	r3, r3, #1
 80002ca:	2103      	movs	r1, #3
 80002cc:	fa01 f303 	lsl.w	r3, r1, r3
 80002d0:	43db      	mvns	r3, r3
 80002d2:	401a      	ands	r2, r3
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	60da      	str	r2, [r3, #12]
      GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	68da      	ldr	r2, [r3, #12]
 80002dc:	683b      	ldr	r3, [r7, #0]
 80002de:	79db      	ldrb	r3, [r3, #7]
 80002e0:	4619      	mov	r1, r3
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	005b      	lsls	r3, r3, #1
 80002e6:	fa01 f303 	lsl.w	r3, r1, r3
 80002ea:	431a      	orrs	r2, r3
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	60da      	str	r2, [r3, #12]
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 80002f0:	697b      	ldr	r3, [r7, #20]
 80002f2:	3301      	adds	r3, #1
 80002f4:	617b      	str	r3, [r7, #20]
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	2b0f      	cmp	r3, #15
 80002fa:	d985      	bls.n	8000208 <GPIO_Init+0x1c>
    }
  }
}
 80002fc:	bf00      	nop
 80002fe:	371c      	adds	r7, #28
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr

08000308 <GPIO_ReadInputDataBit>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_Pin_x where x can be (0..15).
  * @retval The input port pin value.
  */
uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8000308:	b480      	push	{r7}
 800030a:	b085      	sub	sp, #20
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
 8000310:	460b      	mov	r3, r1
 8000312:	807b      	strh	r3, [r7, #2]
  uint8_t bitstatus = 0x00;
 8000314:	2300      	movs	r3, #0
 8000316:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	691a      	ldr	r2, [r3, #16]
 800031c:	887b      	ldrh	r3, [r7, #2]
 800031e:	4013      	ands	r3, r2
 8000320:	2b00      	cmp	r3, #0
 8000322:	d002      	beq.n	800032a <GPIO_ReadInputDataBit+0x22>
  {
    bitstatus = (uint8_t)Bit_SET;
 8000324:	2301      	movs	r3, #1
 8000326:	73fb      	strb	r3, [r7, #15]
 8000328:	e001      	b.n	800032e <GPIO_ReadInputDataBit+0x26>
  }
  else
  {
    bitstatus = (uint8_t)Bit_RESET;
 800032a:	2300      	movs	r3, #0
 800032c:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 800032e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000330:	4618      	mov	r0, r3
 8000332:	3714      	adds	r7, #20
 8000334:	46bd      	mov	sp, r7
 8000336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033a:	4770      	bx	lr

0800033c <GPIO_SetBits>:
  * @param  GPIO_Pin: specifies the port bits to be written.
  *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  * @retval None
  */
void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800033c:	b480      	push	{r7}
 800033e:	b083      	sub	sp, #12
 8000340:	af00      	add	r7, sp, #0
 8000342:	6078      	str	r0, [r7, #4]
 8000344:	460b      	mov	r3, r1
 8000346:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  GPIOx->BSRRL = GPIO_Pin;
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	887a      	ldrh	r2, [r7, #2]
 800034c:	831a      	strh	r2, [r3, #24]
}
 800034e:	bf00      	nop
 8000350:	370c      	adds	r7, #12
 8000352:	46bd      	mov	sp, r7
 8000354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000358:	4770      	bx	lr
	...

0800035c <RCC_AHB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 800035c:	b480      	push	{r7}
 800035e:	b083      	sub	sp, #12
 8000360:	af00      	add	r7, sp, #0
 8000362:	6078      	str	r0, [r7, #4]
 8000364:	460b      	mov	r3, r1
 8000366:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));

  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 8000368:	78fb      	ldrb	r3, [r7, #3]
 800036a:	2b00      	cmp	r3, #0
 800036c:	d006      	beq.n	800037c <RCC_AHB1PeriphClockCmd+0x20>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 800036e:	490a      	ldr	r1, [pc, #40]	; (8000398 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000370:	4b09      	ldr	r3, [pc, #36]	; (8000398 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000372:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4313      	orrs	r3, r2
 8000378:	630b      	str	r3, [r1, #48]	; 0x30
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
  }
}
 800037a:	e006      	b.n	800038a <RCC_AHB1PeriphClockCmd+0x2e>
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 800037c:	4906      	ldr	r1, [pc, #24]	; (8000398 <RCC_AHB1PeriphClockCmd+0x3c>)
 800037e:	4b06      	ldr	r3, [pc, #24]	; (8000398 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000380:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	43db      	mvns	r3, r3
 8000386:	4013      	ands	r3, r2
 8000388:	630b      	str	r3, [r1, #48]	; 0x30
}
 800038a:	bf00      	nop
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	40023800 	.word	0x40023800

0800039c <main>:
#define DELAY_LCD_REF 100e5
#define DELAY_LCD_ON  100e6
#define DELAY_LED	  100e5

int main(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b09e      	sub	sp, #120	; 0x78
 80003a0:	af00      	add	r7, sp, #0
/*------------------------------------------------------------------------------
DECLARACION DE VARIABLES:
------------------------------------------------------------------------------*/
	LCD_2X16_t LCD_2X16[] = {
 80003a2:	4a1f      	ldr	r2, [pc, #124]	; (8000420 <main+0x84>)
 80003a4:	463b      	mov	r3, r7
 80003a6:	4611      	mov	r1, r2
 80003a8:	2278      	movs	r2, #120	; 0x78
 80003aa:	4618      	mov	r0, r3
 80003ac:	f000 fcb0 	bl	8000d10 <memcpy>

/*------------------------------------------------------------------------------
CONFIGURACION DEL MICRO:
------------------------------------------------------------------------------*/
	//Inicializacion del DISPLAY LCD:
	SystemInit();
 80003b0:	f000 fbd8 	bl	8000b64 <SystemInit>
	INIT_LCD_2x16(LCD_2X16);
 80003b4:	463b      	mov	r3, r7
 80003b6:	4618      	mov	r0, r3
 80003b8:	f000 f8aa 	bl	8000510 <INIT_LCD_2x16>
	//Versionado:
	PRINT_LCD_2x16(LCD_2X16, 0, 0, "PR - Estacion");
 80003bc:	4638      	mov	r0, r7
 80003be:	4b19      	ldr	r3, [pc, #100]	; (8000424 <main+0x88>)
 80003c0:	2200      	movs	r2, #0
 80003c2:	2100      	movs	r1, #0
 80003c4:	f000 f8dc 	bl	8000580 <PRINT_LCD_2x16>
	PRINT_LCD_2x16(LCD_2X16, 0, 1, "ver. 0.1");
 80003c8:	4638      	mov	r0, r7
 80003ca:	4b17      	ldr	r3, [pc, #92]	; (8000428 <main+0x8c>)
 80003cc:	2201      	movs	r2, #1
 80003ce:	2100      	movs	r1, #0
 80003d0:	f000 f8d6 	bl	8000580 <PRINT_LCD_2x16>
	DELAY(DELAY_LCD_ON);
 80003d4:	4815      	ldr	r0, [pc, #84]	; (800042c <main+0x90>)
 80003d6:	f000 f871 	bl	80004bc <DELAY>

	//Inicializacion del LED como SALIDA DIGITAL:
	INIT_DO(GPIOB, GPIO_Pin_7);
 80003da:	2180      	movs	r1, #128	; 0x80
 80003dc:	4814      	ldr	r0, [pc, #80]	; (8000430 <main+0x94>)
 80003de:	f000 f84e 	bl	800047e <INIT_DO>

	//Inicializacion del RX-DATA como ENTRADA DIGITAL:
	INIT_DI(GPIOD, GPIO_Pin_6);
 80003e2:	2140      	movs	r1, #64	; 0x40
 80003e4:	4813      	ldr	r0, [pc, #76]	; (8000434 <main+0x98>)
 80003e6:	f000 f82b 	bl	8000440 <INIT_DI>
BUCLE PRINCIPAL:
------------------------------------------------------------------------------*/
    while(1)
    {
    	//Refresco del LCD:
    	DELAY(DELAY_LCD_REF);
 80003ea:	4813      	ldr	r0, [pc, #76]	; (8000438 <main+0x9c>)
 80003ec:	f000 f866 	bl	80004bc <DELAY>
    	CLEAR_LCD_2x16(LCD_2X16);
 80003f0:	463b      	mov	r3, r7
 80003f2:	4618      	mov	r0, r3
 80003f4:	f000 f8b4 	bl	8000560 <CLEAR_LCD_2x16>
    	GPIO_SetBits(GPIOB, GPIO_Pin_7);
 80003f8:	2180      	movs	r1, #128	; 0x80
 80003fa:	480d      	ldr	r0, [pc, #52]	; (8000430 <main+0x94>)
 80003fc:	f7ff ff9e 	bl	800033c <GPIO_SetBits>

    	//Recepcion de datos:
    	while(READ_DI(GPIOD, GPIO_Pin_6))
 8000400:	e005      	b.n	800040e <main+0x72>
    	{
    		PRINT_LCD_2x16(LCD_2X16, 0, 0, "RCV ACK");
 8000402:	4638      	mov	r0, r7
 8000404:	4b0d      	ldr	r3, [pc, #52]	; (800043c <main+0xa0>)
 8000406:	2200      	movs	r2, #0
 8000408:	2100      	movs	r1, #0
 800040a:	f000 f8b9 	bl	8000580 <PRINT_LCD_2x16>
    	while(READ_DI(GPIOD, GPIO_Pin_6))
 800040e:	2140      	movs	r1, #64	; 0x40
 8000410:	4808      	ldr	r0, [pc, #32]	; (8000434 <main+0x98>)
 8000412:	f000 f863 	bl	80004dc <READ_DI>
 8000416:	4603      	mov	r3, r0
 8000418:	2b00      	cmp	r3, #0
 800041a:	d1f2      	bne.n	8000402 <main+0x66>
    	DELAY(DELAY_LCD_REF);
 800041c:	e7e5      	b.n	80003ea <main+0x4e>
 800041e:	bf00      	nop
 8000420:	08000d64 	.word	0x08000d64
 8000424:	08000d40 	.word	0x08000d40
 8000428:	08000d50 	.word	0x08000d50
 800042c:	05f5e100 	.word	0x05f5e100
 8000430:	40020400 	.word	0x40020400
 8000434:	40020c00 	.word	0x40020c00
 8000438:	00989680 	.word	0x00989680
 800043c:	08000d5c 	.word	0x08000d5c

08000440 <INIT_DI>:
 8000440:	b580      	push	{r7, lr}
 8000442:	b086      	sub	sp, #24
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
 8000448:	6039      	str	r1, [r7, #0]
 800044a:	6878      	ldr	r0, [r7, #4]
 800044c:	f000 f8ba 	bl	80005c4 <FIND_CLOCK>
 8000450:	6178      	str	r0, [r7, #20]
 8000452:	2101      	movs	r1, #1
 8000454:	6978      	ldr	r0, [r7, #20]
 8000456:	f7ff ff81 	bl	800035c <RCC_AHB1PeriphClockCmd>
 800045a:	683b      	ldr	r3, [r7, #0]
 800045c:	60fb      	str	r3, [r7, #12]
 800045e:	2300      	movs	r3, #0
 8000460:	743b      	strb	r3, [r7, #16]
 8000462:	2303      	movs	r3, #3
 8000464:	747b      	strb	r3, [r7, #17]
 8000466:	2300      	movs	r3, #0
 8000468:	74fb      	strb	r3, [r7, #19]
 800046a:	f107 030c 	add.w	r3, r7, #12
 800046e:	4619      	mov	r1, r3
 8000470:	6878      	ldr	r0, [r7, #4]
 8000472:	f7ff febb 	bl	80001ec <GPIO_Init>
 8000476:	bf00      	nop
 8000478:	3718      	adds	r7, #24
 800047a:	46bd      	mov	sp, r7
 800047c:	bd80      	pop	{r7, pc}

0800047e <INIT_DO>:
 800047e:	b580      	push	{r7, lr}
 8000480:	b086      	sub	sp, #24
 8000482:	af00      	add	r7, sp, #0
 8000484:	6078      	str	r0, [r7, #4]
 8000486:	6039      	str	r1, [r7, #0]
 8000488:	6878      	ldr	r0, [r7, #4]
 800048a:	f000 f89b 	bl	80005c4 <FIND_CLOCK>
 800048e:	6178      	str	r0, [r7, #20]
 8000490:	2101      	movs	r1, #1
 8000492:	6978      	ldr	r0, [r7, #20]
 8000494:	f7ff ff62 	bl	800035c <RCC_AHB1PeriphClockCmd>
 8000498:	683b      	ldr	r3, [r7, #0]
 800049a:	60fb      	str	r3, [r7, #12]
 800049c:	2301      	movs	r3, #1
 800049e:	743b      	strb	r3, [r7, #16]
 80004a0:	2303      	movs	r3, #3
 80004a2:	747b      	strb	r3, [r7, #17]
 80004a4:	2300      	movs	r3, #0
 80004a6:	74fb      	strb	r3, [r7, #19]
 80004a8:	f107 030c 	add.w	r3, r7, #12
 80004ac:	4619      	mov	r1, r3
 80004ae:	6878      	ldr	r0, [r7, #4]
 80004b0:	f7ff fe9c 	bl	80001ec <GPIO_Init>
 80004b4:	bf00      	nop
 80004b6:	3718      	adds	r7, #24
 80004b8:	46bd      	mov	sp, r7
 80004ba:	bd80      	pop	{r7, pc}

080004bc <DELAY>:
 80004bc:	b480      	push	{r7}
 80004be:	b083      	sub	sp, #12
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	6078      	str	r0, [r7, #4]
 80004c4:	bf00      	nop
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	1e5a      	subs	r2, r3, #1
 80004ca:	607a      	str	r2, [r7, #4]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	d1fa      	bne.n	80004c6 <DELAY+0xa>
 80004d0:	bf00      	nop
 80004d2:	370c      	adds	r7, #12
 80004d4:	46bd      	mov	sp, r7
 80004d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004da:	4770      	bx	lr

080004dc <READ_DI>:
 80004dc:	b580      	push	{r7, lr}
 80004de:	b082      	sub	sp, #8
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
 80004e4:	460b      	mov	r3, r1
 80004e6:	807b      	strh	r3, [r7, #2]
 80004e8:	4808      	ldr	r0, [pc, #32]	; (800050c <READ_DI+0x30>)
 80004ea:	f7ff ffe7 	bl	80004bc <DELAY>
 80004ee:	887b      	ldrh	r3, [r7, #2]
 80004f0:	4619      	mov	r1, r3
 80004f2:	6878      	ldr	r0, [r7, #4]
 80004f4:	f7ff ff08 	bl	8000308 <GPIO_ReadInputDataBit>
 80004f8:	4603      	mov	r3, r0
 80004fa:	2b00      	cmp	r3, #0
 80004fc:	d001      	beq.n	8000502 <READ_DI+0x26>
 80004fe:	2301      	movs	r3, #1
 8000500:	e000      	b.n	8000504 <READ_DI+0x28>
 8000502:	2300      	movs	r3, #0
 8000504:	4618      	mov	r0, r3
 8000506:	3708      	adds	r7, #8
 8000508:	46bd      	mov	sp, r7
 800050a:	bd80      	pop	{r7, pc}
 800050c:	000186a0 	.word	0x000186a0

08000510 <INIT_LCD_2x16>:
 8000510:	b580      	push	{r7, lr}
 8000512:	b082      	sub	sp, #8
 8000514:	af00      	add	r7, sp, #0
 8000516:	6078      	str	r0, [r7, #4]
 8000518:	6878      	ldr	r0, [r7, #4]
 800051a:	f000 f89f 	bl	800065c <P_LCD_2x16_InitIO>
 800051e:	480f      	ldr	r0, [pc, #60]	; (800055c <INIT_LCD_2x16+0x4c>)
 8000520:	f000 f92f 	bl	8000782 <P_LCD_2x16_Delay>
 8000524:	6878      	ldr	r0, [r7, #4]
 8000526:	f000 f93c 	bl	80007a2 <P_LCD_2x16_InitSequenz>
 800052a:	6879      	ldr	r1, [r7, #4]
 800052c:	2028      	movs	r0, #40	; 0x28
 800052e:	f000 f994 	bl	800085a <P_LCD_2x16_Cmd>
 8000532:	6879      	ldr	r1, [r7, #4]
 8000534:	2006      	movs	r0, #6
 8000536:	f000 f990 	bl	800085a <P_LCD_2x16_Cmd>
 800053a:	6879      	ldr	r1, [r7, #4]
 800053c:	200c      	movs	r0, #12
 800053e:	f000 f98c 	bl	800085a <P_LCD_2x16_Cmd>
 8000542:	6879      	ldr	r1, [r7, #4]
 8000544:	2001      	movs	r0, #1
 8000546:	f000 f988 	bl	800085a <P_LCD_2x16_Cmd>
 800054a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800054e:	f000 f918 	bl	8000782 <P_LCD_2x16_Delay>
 8000552:	bf00      	nop
 8000554:	3708      	adds	r7, #8
 8000556:	46bd      	mov	sp, r7
 8000558:	bd80      	pop	{r7, pc}
 800055a:	bf00      	nop
 800055c:	000186a0 	.word	0x000186a0

08000560 <CLEAR_LCD_2x16>:
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
 8000568:	6879      	ldr	r1, [r7, #4]
 800056a:	2001      	movs	r0, #1
 800056c:	f000 f975 	bl	800085a <P_LCD_2x16_Cmd>
 8000570:	f24c 3050 	movw	r0, #50000	; 0xc350
 8000574:	f000 f905 	bl	8000782 <P_LCD_2x16_Delay>
 8000578:	bf00      	nop
 800057a:	3708      	adds	r7, #8
 800057c:	46bd      	mov	sp, r7
 800057e:	bd80      	pop	{r7, pc}

08000580 <PRINT_LCD_2x16>:
 8000580:	b580      	push	{r7, lr}
 8000582:	b084      	sub	sp, #16
 8000584:	af00      	add	r7, sp, #0
 8000586:	60f8      	str	r0, [r7, #12]
 8000588:	607b      	str	r3, [r7, #4]
 800058a:	460b      	mov	r3, r1
 800058c:	72fb      	strb	r3, [r7, #11]
 800058e:	4613      	mov	r3, r2
 8000590:	72bb      	strb	r3, [r7, #10]
 8000592:	7aba      	ldrb	r2, [r7, #10]
 8000594:	7afb      	ldrb	r3, [r7, #11]
 8000596:	4619      	mov	r1, r3
 8000598:	68f8      	ldr	r0, [r7, #12]
 800059a:	f000 f9e1 	bl	8000960 <P_LCD_2x16_Cursor>
 800059e:	e008      	b.n	80005b2 <PRINT_LCD_2x16+0x32>
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	781b      	ldrb	r3, [r3, #0]
 80005a4:	68f9      	ldr	r1, [r7, #12]
 80005a6:	4618      	mov	r0, r3
 80005a8:	f000 fa00 	bl	80009ac <P_LCD_2x16_Data>
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	3301      	adds	r3, #1
 80005b0:	607b      	str	r3, [r7, #4]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	781b      	ldrb	r3, [r3, #0]
 80005b6:	2b00      	cmp	r3, #0
 80005b8:	d1f2      	bne.n	80005a0 <PRINT_LCD_2x16+0x20>
 80005ba:	bf00      	nop
 80005bc:	3710      	adds	r7, #16
 80005be:	46bd      	mov	sp, r7
 80005c0:	bd80      	pop	{r7, pc}
	...

080005c4 <FIND_CLOCK>:
 80005c4:	b480      	push	{r7}
 80005c6:	b085      	sub	sp, #20
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	4a1c      	ldr	r2, [pc, #112]	; (8000640 <FIND_CLOCK+0x7c>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d102      	bne.n	80005da <FIND_CLOCK+0x16>
 80005d4:	2301      	movs	r3, #1
 80005d6:	60fb      	str	r3, [r7, #12]
 80005d8:	e02b      	b.n	8000632 <FIND_CLOCK+0x6e>
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	4a19      	ldr	r2, [pc, #100]	; (8000644 <FIND_CLOCK+0x80>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d102      	bne.n	80005e8 <FIND_CLOCK+0x24>
 80005e2:	2302      	movs	r3, #2
 80005e4:	60fb      	str	r3, [r7, #12]
 80005e6:	e024      	b.n	8000632 <FIND_CLOCK+0x6e>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	4a17      	ldr	r2, [pc, #92]	; (8000648 <FIND_CLOCK+0x84>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d102      	bne.n	80005f6 <FIND_CLOCK+0x32>
 80005f0:	2304      	movs	r3, #4
 80005f2:	60fb      	str	r3, [r7, #12]
 80005f4:	e01d      	b.n	8000632 <FIND_CLOCK+0x6e>
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	4a14      	ldr	r2, [pc, #80]	; (800064c <FIND_CLOCK+0x88>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d102      	bne.n	8000604 <FIND_CLOCK+0x40>
 80005fe:	2308      	movs	r3, #8
 8000600:	60fb      	str	r3, [r7, #12]
 8000602:	e016      	b.n	8000632 <FIND_CLOCK+0x6e>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	4a12      	ldr	r2, [pc, #72]	; (8000650 <FIND_CLOCK+0x8c>)
 8000608:	4293      	cmp	r3, r2
 800060a:	d102      	bne.n	8000612 <FIND_CLOCK+0x4e>
 800060c:	2310      	movs	r3, #16
 800060e:	60fb      	str	r3, [r7, #12]
 8000610:	e00f      	b.n	8000632 <FIND_CLOCK+0x6e>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	4a0f      	ldr	r2, [pc, #60]	; (8000654 <FIND_CLOCK+0x90>)
 8000616:	4293      	cmp	r3, r2
 8000618:	d102      	bne.n	8000620 <FIND_CLOCK+0x5c>
 800061a:	2320      	movs	r3, #32
 800061c:	60fb      	str	r3, [r7, #12]
 800061e:	e008      	b.n	8000632 <FIND_CLOCK+0x6e>
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	4a0d      	ldr	r2, [pc, #52]	; (8000658 <FIND_CLOCK+0x94>)
 8000624:	4293      	cmp	r3, r2
 8000626:	d102      	bne.n	800062e <FIND_CLOCK+0x6a>
 8000628:	2340      	movs	r3, #64	; 0x40
 800062a:	60fb      	str	r3, [r7, #12]
 800062c:	e001      	b.n	8000632 <FIND_CLOCK+0x6e>
 800062e:	2300      	movs	r3, #0
 8000630:	60fb      	str	r3, [r7, #12]
 8000632:	68fb      	ldr	r3, [r7, #12]
 8000634:	4618      	mov	r0, r3
 8000636:	3714      	adds	r7, #20
 8000638:	46bd      	mov	sp, r7
 800063a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063e:	4770      	bx	lr
 8000640:	40020000 	.word	0x40020000
 8000644:	40020400 	.word	0x40020400
 8000648:	40020800 	.word	0x40020800
 800064c:	40020c00 	.word	0x40020c00
 8000650:	40021000 	.word	0x40021000
 8000654:	40021400 	.word	0x40021400
 8000658:	40021800 	.word	0x40021800

0800065c <P_LCD_2x16_InitIO>:
 800065c:	b580      	push	{r7, lr}
 800065e:	b086      	sub	sp, #24
 8000660:	af00      	add	r7, sp, #0
 8000662:	6078      	str	r0, [r7, #4]
 8000664:	2300      	movs	r3, #0
 8000666:	75fb      	strb	r3, [r7, #23]
 8000668:	e046      	b.n	80006f8 <P_LCD_2x16_InitIO+0x9c>
 800066a:	7dfa      	ldrb	r2, [r7, #23]
 800066c:	4613      	mov	r3, r2
 800066e:	009b      	lsls	r3, r3, #2
 8000670:	4413      	add	r3, r2
 8000672:	009b      	lsls	r3, r3, #2
 8000674:	461a      	mov	r2, r3
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	4413      	add	r3, r2
 800067a:	68db      	ldr	r3, [r3, #12]
 800067c:	2101      	movs	r1, #1
 800067e:	4618      	mov	r0, r3
 8000680:	f7ff fe6c 	bl	800035c <RCC_AHB1PeriphClockCmd>
 8000684:	7dfa      	ldrb	r2, [r7, #23]
 8000686:	4613      	mov	r3, r2
 8000688:	009b      	lsls	r3, r3, #2
 800068a:	4413      	add	r3, r2
 800068c:	009b      	lsls	r3, r3, #2
 800068e:	461a      	mov	r2, r3
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	4413      	add	r3, r2
 8000694:	891b      	ldrh	r3, [r3, #8]
 8000696:	60fb      	str	r3, [r7, #12]
 8000698:	2301      	movs	r3, #1
 800069a:	743b      	strb	r3, [r7, #16]
 800069c:	2300      	movs	r3, #0
 800069e:	74bb      	strb	r3, [r7, #18]
 80006a0:	2301      	movs	r3, #1
 80006a2:	74fb      	strb	r3, [r7, #19]
 80006a4:	2302      	movs	r3, #2
 80006a6:	747b      	strb	r3, [r7, #17]
 80006a8:	7dfa      	ldrb	r2, [r7, #23]
 80006aa:	4613      	mov	r3, r2
 80006ac:	009b      	lsls	r3, r3, #2
 80006ae:	4413      	add	r3, r2
 80006b0:	009b      	lsls	r3, r3, #2
 80006b2:	461a      	mov	r2, r3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	4413      	add	r3, r2
 80006b8:	685b      	ldr	r3, [r3, #4]
 80006ba:	f107 020c 	add.w	r2, r7, #12
 80006be:	4611      	mov	r1, r2
 80006c0:	4618      	mov	r0, r3
 80006c2:	f7ff fd93 	bl	80001ec <GPIO_Init>
 80006c6:	7dfa      	ldrb	r2, [r7, #23]
 80006c8:	4613      	mov	r3, r2
 80006ca:	009b      	lsls	r3, r3, #2
 80006cc:	4413      	add	r3, r2
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	461a      	mov	r2, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	4413      	add	r3, r2
 80006d6:	7c1b      	ldrb	r3, [r3, #16]
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d105      	bne.n	80006e8 <P_LCD_2x16_InitIO+0x8c>
 80006dc:	7dfb      	ldrb	r3, [r7, #23]
 80006de:	6879      	ldr	r1, [r7, #4]
 80006e0:	4618      	mov	r0, r3
 80006e2:	f000 f810 	bl	8000706 <P_LCD_2x16_PinLo>
 80006e6:	e004      	b.n	80006f2 <P_LCD_2x16_InitIO+0x96>
 80006e8:	7dfb      	ldrb	r3, [r7, #23]
 80006ea:	6879      	ldr	r1, [r7, #4]
 80006ec:	4618      	mov	r0, r3
 80006ee:	f000 f829 	bl	8000744 <P_LCD_2x16_PinHi>
 80006f2:	7dfb      	ldrb	r3, [r7, #23]
 80006f4:	3301      	adds	r3, #1
 80006f6:	75fb      	strb	r3, [r7, #23]
 80006f8:	7dfb      	ldrb	r3, [r7, #23]
 80006fa:	2b05      	cmp	r3, #5
 80006fc:	d9b5      	bls.n	800066a <P_LCD_2x16_InitIO+0xe>
 80006fe:	bf00      	nop
 8000700:	3718      	adds	r7, #24
 8000702:	46bd      	mov	sp, r7
 8000704:	bd80      	pop	{r7, pc}

08000706 <P_LCD_2x16_PinLo>:
 8000706:	b480      	push	{r7}
 8000708:	b083      	sub	sp, #12
 800070a:	af00      	add	r7, sp, #0
 800070c:	4603      	mov	r3, r0
 800070e:	6039      	str	r1, [r7, #0]
 8000710:	71fb      	strb	r3, [r7, #7]
 8000712:	79fa      	ldrb	r2, [r7, #7]
 8000714:	4613      	mov	r3, r2
 8000716:	009b      	lsls	r3, r3, #2
 8000718:	4413      	add	r3, r2
 800071a:	009b      	lsls	r3, r3, #2
 800071c:	461a      	mov	r2, r3
 800071e:	683b      	ldr	r3, [r7, #0]
 8000720:	4413      	add	r3, r2
 8000722:	6859      	ldr	r1, [r3, #4]
 8000724:	79fa      	ldrb	r2, [r7, #7]
 8000726:	4613      	mov	r3, r2
 8000728:	009b      	lsls	r3, r3, #2
 800072a:	4413      	add	r3, r2
 800072c:	009b      	lsls	r3, r3, #2
 800072e:	461a      	mov	r2, r3
 8000730:	683b      	ldr	r3, [r7, #0]
 8000732:	4413      	add	r3, r2
 8000734:	891b      	ldrh	r3, [r3, #8]
 8000736:	834b      	strh	r3, [r1, #26]
 8000738:	bf00      	nop
 800073a:	370c      	adds	r7, #12
 800073c:	46bd      	mov	sp, r7
 800073e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000742:	4770      	bx	lr

08000744 <P_LCD_2x16_PinHi>:
 8000744:	b480      	push	{r7}
 8000746:	b083      	sub	sp, #12
 8000748:	af00      	add	r7, sp, #0
 800074a:	4603      	mov	r3, r0
 800074c:	6039      	str	r1, [r7, #0]
 800074e:	71fb      	strb	r3, [r7, #7]
 8000750:	79fa      	ldrb	r2, [r7, #7]
 8000752:	4613      	mov	r3, r2
 8000754:	009b      	lsls	r3, r3, #2
 8000756:	4413      	add	r3, r2
 8000758:	009b      	lsls	r3, r3, #2
 800075a:	461a      	mov	r2, r3
 800075c:	683b      	ldr	r3, [r7, #0]
 800075e:	4413      	add	r3, r2
 8000760:	6859      	ldr	r1, [r3, #4]
 8000762:	79fa      	ldrb	r2, [r7, #7]
 8000764:	4613      	mov	r3, r2
 8000766:	009b      	lsls	r3, r3, #2
 8000768:	4413      	add	r3, r2
 800076a:	009b      	lsls	r3, r3, #2
 800076c:	461a      	mov	r2, r3
 800076e:	683b      	ldr	r3, [r7, #0]
 8000770:	4413      	add	r3, r2
 8000772:	891b      	ldrh	r3, [r3, #8]
 8000774:	830b      	strh	r3, [r1, #24]
 8000776:	bf00      	nop
 8000778:	370c      	adds	r7, #12
 800077a:	46bd      	mov	sp, r7
 800077c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000780:	4770      	bx	lr

08000782 <P_LCD_2x16_Delay>:
 8000782:	b480      	push	{r7}
 8000784:	b083      	sub	sp, #12
 8000786:	af00      	add	r7, sp, #0
 8000788:	6078      	str	r0, [r7, #4]
 800078a:	bf00      	nop
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	1e5a      	subs	r2, r3, #1
 8000790:	607a      	str	r2, [r7, #4]
 8000792:	2b00      	cmp	r3, #0
 8000794:	d1fa      	bne.n	800078c <P_LCD_2x16_Delay+0xa>
 8000796:	bf00      	nop
 8000798:	370c      	adds	r7, #12
 800079a:	46bd      	mov	sp, r7
 800079c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a0:	4770      	bx	lr

080007a2 <P_LCD_2x16_InitSequenz>:
 80007a2:	b580      	push	{r7, lr}
 80007a4:	b082      	sub	sp, #8
 80007a6:	af00      	add	r7, sp, #0
 80007a8:	6078      	str	r0, [r7, #4]
 80007aa:	6879      	ldr	r1, [r7, #4]
 80007ac:	2002      	movs	r0, #2
 80007ae:	f7ff ffc9 	bl	8000744 <P_LCD_2x16_PinHi>
 80007b2:	6879      	ldr	r1, [r7, #4]
 80007b4:	2003      	movs	r0, #3
 80007b6:	f7ff ffc5 	bl	8000744 <P_LCD_2x16_PinHi>
 80007ba:	6879      	ldr	r1, [r7, #4]
 80007bc:	2004      	movs	r0, #4
 80007be:	f7ff ffa2 	bl	8000706 <P_LCD_2x16_PinLo>
 80007c2:	6879      	ldr	r1, [r7, #4]
 80007c4:	2005      	movs	r0, #5
 80007c6:	f7ff ff9e 	bl	8000706 <P_LCD_2x16_PinLo>
 80007ca:	6878      	ldr	r0, [r7, #4]
 80007cc:	f000 f82d 	bl	800082a <P_LCD_2x16_Clk>
 80007d0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80007d4:	f7ff ffd5 	bl	8000782 <P_LCD_2x16_Delay>
 80007d8:	6878      	ldr	r0, [r7, #4]
 80007da:	f000 f826 	bl	800082a <P_LCD_2x16_Clk>
 80007de:	f24c 3050 	movw	r0, #50000	; 0xc350
 80007e2:	f7ff ffce 	bl	8000782 <P_LCD_2x16_Delay>
 80007e6:	6878      	ldr	r0, [r7, #4]
 80007e8:	f000 f81f 	bl	800082a <P_LCD_2x16_Clk>
 80007ec:	f24c 3050 	movw	r0, #50000	; 0xc350
 80007f0:	f7ff ffc7 	bl	8000782 <P_LCD_2x16_Delay>
 80007f4:	6879      	ldr	r1, [r7, #4]
 80007f6:	2002      	movs	r0, #2
 80007f8:	f7ff ff85 	bl	8000706 <P_LCD_2x16_PinLo>
 80007fc:	6879      	ldr	r1, [r7, #4]
 80007fe:	2003      	movs	r0, #3
 8000800:	f7ff ffa0 	bl	8000744 <P_LCD_2x16_PinHi>
 8000804:	6879      	ldr	r1, [r7, #4]
 8000806:	2004      	movs	r0, #4
 8000808:	f7ff ff7d 	bl	8000706 <P_LCD_2x16_PinLo>
 800080c:	6879      	ldr	r1, [r7, #4]
 800080e:	2005      	movs	r0, #5
 8000810:	f7ff ff79 	bl	8000706 <P_LCD_2x16_PinLo>
 8000814:	6878      	ldr	r0, [r7, #4]
 8000816:	f000 f808 	bl	800082a <P_LCD_2x16_Clk>
 800081a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800081e:	f7ff ffb0 	bl	8000782 <P_LCD_2x16_Delay>
 8000822:	bf00      	nop
 8000824:	3708      	adds	r7, #8
 8000826:	46bd      	mov	sp, r7
 8000828:	bd80      	pop	{r7, pc}

0800082a <P_LCD_2x16_Clk>:
 800082a:	b580      	push	{r7, lr}
 800082c:	b082      	sub	sp, #8
 800082e:	af00      	add	r7, sp, #0
 8000830:	6078      	str	r0, [r7, #4]
 8000832:	6879      	ldr	r1, [r7, #4]
 8000834:	2001      	movs	r0, #1
 8000836:	f7ff ff85 	bl	8000744 <P_LCD_2x16_PinHi>
 800083a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800083e:	f7ff ffa0 	bl	8000782 <P_LCD_2x16_Delay>
 8000842:	6879      	ldr	r1, [r7, #4]
 8000844:	2001      	movs	r0, #1
 8000846:	f7ff ff5e 	bl	8000706 <P_LCD_2x16_PinLo>
 800084a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800084e:	f7ff ff98 	bl	8000782 <P_LCD_2x16_Delay>
 8000852:	bf00      	nop
 8000854:	3708      	adds	r7, #8
 8000856:	46bd      	mov	sp, r7
 8000858:	bd80      	pop	{r7, pc}

0800085a <P_LCD_2x16_Cmd>:
 800085a:	b580      	push	{r7, lr}
 800085c:	b082      	sub	sp, #8
 800085e:	af00      	add	r7, sp, #0
 8000860:	4603      	mov	r3, r0
 8000862:	6039      	str	r1, [r7, #0]
 8000864:	71fb      	strb	r3, [r7, #7]
 8000866:	6839      	ldr	r1, [r7, #0]
 8000868:	2000      	movs	r0, #0
 800086a:	f7ff ff4c 	bl	8000706 <P_LCD_2x16_PinLo>
 800086e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000872:	2b00      	cmp	r3, #0
 8000874:	da04      	bge.n	8000880 <P_LCD_2x16_Cmd+0x26>
 8000876:	6839      	ldr	r1, [r7, #0]
 8000878:	2005      	movs	r0, #5
 800087a:	f7ff ff63 	bl	8000744 <P_LCD_2x16_PinHi>
 800087e:	e003      	b.n	8000888 <P_LCD_2x16_Cmd+0x2e>
 8000880:	6839      	ldr	r1, [r7, #0]
 8000882:	2005      	movs	r0, #5
 8000884:	f7ff ff3f 	bl	8000706 <P_LCD_2x16_PinLo>
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800088e:	2b00      	cmp	r3, #0
 8000890:	d004      	beq.n	800089c <P_LCD_2x16_Cmd+0x42>
 8000892:	6839      	ldr	r1, [r7, #0]
 8000894:	2004      	movs	r0, #4
 8000896:	f7ff ff55 	bl	8000744 <P_LCD_2x16_PinHi>
 800089a:	e003      	b.n	80008a4 <P_LCD_2x16_Cmd+0x4a>
 800089c:	6839      	ldr	r1, [r7, #0]
 800089e:	2004      	movs	r0, #4
 80008a0:	f7ff ff31 	bl	8000706 <P_LCD_2x16_PinLo>
 80008a4:	79fb      	ldrb	r3, [r7, #7]
 80008a6:	f003 0320 	and.w	r3, r3, #32
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d004      	beq.n	80008b8 <P_LCD_2x16_Cmd+0x5e>
 80008ae:	6839      	ldr	r1, [r7, #0]
 80008b0:	2003      	movs	r0, #3
 80008b2:	f7ff ff47 	bl	8000744 <P_LCD_2x16_PinHi>
 80008b6:	e003      	b.n	80008c0 <P_LCD_2x16_Cmd+0x66>
 80008b8:	6839      	ldr	r1, [r7, #0]
 80008ba:	2003      	movs	r0, #3
 80008bc:	f7ff ff23 	bl	8000706 <P_LCD_2x16_PinLo>
 80008c0:	79fb      	ldrb	r3, [r7, #7]
 80008c2:	f003 0310 	and.w	r3, r3, #16
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	d004      	beq.n	80008d4 <P_LCD_2x16_Cmd+0x7a>
 80008ca:	6839      	ldr	r1, [r7, #0]
 80008cc:	2002      	movs	r0, #2
 80008ce:	f7ff ff39 	bl	8000744 <P_LCD_2x16_PinHi>
 80008d2:	e003      	b.n	80008dc <P_LCD_2x16_Cmd+0x82>
 80008d4:	6839      	ldr	r1, [r7, #0]
 80008d6:	2002      	movs	r0, #2
 80008d8:	f7ff ff15 	bl	8000706 <P_LCD_2x16_PinLo>
 80008dc:	6838      	ldr	r0, [r7, #0]
 80008de:	f7ff ffa4 	bl	800082a <P_LCD_2x16_Clk>
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	f003 0308 	and.w	r3, r3, #8
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	d004      	beq.n	80008f6 <P_LCD_2x16_Cmd+0x9c>
 80008ec:	6839      	ldr	r1, [r7, #0]
 80008ee:	2005      	movs	r0, #5
 80008f0:	f7ff ff28 	bl	8000744 <P_LCD_2x16_PinHi>
 80008f4:	e003      	b.n	80008fe <P_LCD_2x16_Cmd+0xa4>
 80008f6:	6839      	ldr	r1, [r7, #0]
 80008f8:	2005      	movs	r0, #5
 80008fa:	f7ff ff04 	bl	8000706 <P_LCD_2x16_PinLo>
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	f003 0304 	and.w	r3, r3, #4
 8000904:	2b00      	cmp	r3, #0
 8000906:	d004      	beq.n	8000912 <P_LCD_2x16_Cmd+0xb8>
 8000908:	6839      	ldr	r1, [r7, #0]
 800090a:	2004      	movs	r0, #4
 800090c:	f7ff ff1a 	bl	8000744 <P_LCD_2x16_PinHi>
 8000910:	e003      	b.n	800091a <P_LCD_2x16_Cmd+0xc0>
 8000912:	6839      	ldr	r1, [r7, #0]
 8000914:	2004      	movs	r0, #4
 8000916:	f7ff fef6 	bl	8000706 <P_LCD_2x16_PinLo>
 800091a:	79fb      	ldrb	r3, [r7, #7]
 800091c:	f003 0302 	and.w	r3, r3, #2
 8000920:	2b00      	cmp	r3, #0
 8000922:	d004      	beq.n	800092e <P_LCD_2x16_Cmd+0xd4>
 8000924:	6839      	ldr	r1, [r7, #0]
 8000926:	2003      	movs	r0, #3
 8000928:	f7ff ff0c 	bl	8000744 <P_LCD_2x16_PinHi>
 800092c:	e003      	b.n	8000936 <P_LCD_2x16_Cmd+0xdc>
 800092e:	6839      	ldr	r1, [r7, #0]
 8000930:	2003      	movs	r0, #3
 8000932:	f7ff fee8 	bl	8000706 <P_LCD_2x16_PinLo>
 8000936:	79fb      	ldrb	r3, [r7, #7]
 8000938:	f003 0301 	and.w	r3, r3, #1
 800093c:	2b00      	cmp	r3, #0
 800093e:	d004      	beq.n	800094a <P_LCD_2x16_Cmd+0xf0>
 8000940:	6839      	ldr	r1, [r7, #0]
 8000942:	2002      	movs	r0, #2
 8000944:	f7ff fefe 	bl	8000744 <P_LCD_2x16_PinHi>
 8000948:	e003      	b.n	8000952 <P_LCD_2x16_Cmd+0xf8>
 800094a:	6839      	ldr	r1, [r7, #0]
 800094c:	2002      	movs	r0, #2
 800094e:	f7ff feda 	bl	8000706 <P_LCD_2x16_PinLo>
 8000952:	6838      	ldr	r0, [r7, #0]
 8000954:	f7ff ff69 	bl	800082a <P_LCD_2x16_Clk>
 8000958:	bf00      	nop
 800095a:	3708      	adds	r7, #8
 800095c:	46bd      	mov	sp, r7
 800095e:	bd80      	pop	{r7, pc}

08000960 <P_LCD_2x16_Cursor>:
 8000960:	b580      	push	{r7, lr}
 8000962:	b084      	sub	sp, #16
 8000964:	af00      	add	r7, sp, #0
 8000966:	6078      	str	r0, [r7, #4]
 8000968:	460b      	mov	r3, r1
 800096a:	70fb      	strb	r3, [r7, #3]
 800096c:	4613      	mov	r3, r2
 800096e:	70bb      	strb	r3, [r7, #2]
 8000970:	78fb      	ldrb	r3, [r7, #3]
 8000972:	2b0f      	cmp	r3, #15
 8000974:	d901      	bls.n	800097a <P_LCD_2x16_Cursor+0x1a>
 8000976:	2300      	movs	r3, #0
 8000978:	70fb      	strb	r3, [r7, #3]
 800097a:	78bb      	ldrb	r3, [r7, #2]
 800097c:	2b01      	cmp	r3, #1
 800097e:	d901      	bls.n	8000984 <P_LCD_2x16_Cursor+0x24>
 8000980:	2300      	movs	r3, #0
 8000982:	70bb      	strb	r3, [r7, #2]
 8000984:	78bb      	ldrb	r3, [r7, #2]
 8000986:	019b      	lsls	r3, r3, #6
 8000988:	73fb      	strb	r3, [r7, #15]
 800098a:	7bfa      	ldrb	r2, [r7, #15]
 800098c:	78fb      	ldrb	r3, [r7, #3]
 800098e:	4313      	orrs	r3, r2
 8000990:	73fb      	strb	r3, [r7, #15]
 8000992:	7bfb      	ldrb	r3, [r7, #15]
 8000994:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000998:	73fb      	strb	r3, [r7, #15]
 800099a:	7bfb      	ldrb	r3, [r7, #15]
 800099c:	6879      	ldr	r1, [r7, #4]
 800099e:	4618      	mov	r0, r3
 80009a0:	f7ff ff5b 	bl	800085a <P_LCD_2x16_Cmd>
 80009a4:	bf00      	nop
 80009a6:	3710      	adds	r7, #16
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bd80      	pop	{r7, pc}

080009ac <P_LCD_2x16_Data>:
 80009ac:	b580      	push	{r7, lr}
 80009ae:	b082      	sub	sp, #8
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	4603      	mov	r3, r0
 80009b4:	6039      	str	r1, [r7, #0]
 80009b6:	71fb      	strb	r3, [r7, #7]
 80009b8:	6839      	ldr	r1, [r7, #0]
 80009ba:	2000      	movs	r0, #0
 80009bc:	f7ff fec2 	bl	8000744 <P_LCD_2x16_PinHi>
 80009c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	da04      	bge.n	80009d2 <P_LCD_2x16_Data+0x26>
 80009c8:	6839      	ldr	r1, [r7, #0]
 80009ca:	2005      	movs	r0, #5
 80009cc:	f7ff feba 	bl	8000744 <P_LCD_2x16_PinHi>
 80009d0:	e003      	b.n	80009da <P_LCD_2x16_Data+0x2e>
 80009d2:	6839      	ldr	r1, [r7, #0]
 80009d4:	2005      	movs	r0, #5
 80009d6:	f7ff fe96 	bl	8000706 <P_LCD_2x16_PinLo>
 80009da:	79fb      	ldrb	r3, [r7, #7]
 80009dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d004      	beq.n	80009ee <P_LCD_2x16_Data+0x42>
 80009e4:	6839      	ldr	r1, [r7, #0]
 80009e6:	2004      	movs	r0, #4
 80009e8:	f7ff feac 	bl	8000744 <P_LCD_2x16_PinHi>
 80009ec:	e003      	b.n	80009f6 <P_LCD_2x16_Data+0x4a>
 80009ee:	6839      	ldr	r1, [r7, #0]
 80009f0:	2004      	movs	r0, #4
 80009f2:	f7ff fe88 	bl	8000706 <P_LCD_2x16_PinLo>
 80009f6:	79fb      	ldrb	r3, [r7, #7]
 80009f8:	f003 0320 	and.w	r3, r3, #32
 80009fc:	2b00      	cmp	r3, #0
 80009fe:	d004      	beq.n	8000a0a <P_LCD_2x16_Data+0x5e>
 8000a00:	6839      	ldr	r1, [r7, #0]
 8000a02:	2003      	movs	r0, #3
 8000a04:	f7ff fe9e 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a08:	e003      	b.n	8000a12 <P_LCD_2x16_Data+0x66>
 8000a0a:	6839      	ldr	r1, [r7, #0]
 8000a0c:	2003      	movs	r0, #3
 8000a0e:	f7ff fe7a 	bl	8000706 <P_LCD_2x16_PinLo>
 8000a12:	79fb      	ldrb	r3, [r7, #7]
 8000a14:	f003 0310 	and.w	r3, r3, #16
 8000a18:	2b00      	cmp	r3, #0
 8000a1a:	d004      	beq.n	8000a26 <P_LCD_2x16_Data+0x7a>
 8000a1c:	6839      	ldr	r1, [r7, #0]
 8000a1e:	2002      	movs	r0, #2
 8000a20:	f7ff fe90 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a24:	e003      	b.n	8000a2e <P_LCD_2x16_Data+0x82>
 8000a26:	6839      	ldr	r1, [r7, #0]
 8000a28:	2002      	movs	r0, #2
 8000a2a:	f7ff fe6c 	bl	8000706 <P_LCD_2x16_PinLo>
 8000a2e:	6838      	ldr	r0, [r7, #0]
 8000a30:	f7ff fefb 	bl	800082a <P_LCD_2x16_Clk>
 8000a34:	79fb      	ldrb	r3, [r7, #7]
 8000a36:	f003 0308 	and.w	r3, r3, #8
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	d004      	beq.n	8000a48 <P_LCD_2x16_Data+0x9c>
 8000a3e:	6839      	ldr	r1, [r7, #0]
 8000a40:	2005      	movs	r0, #5
 8000a42:	f7ff fe7f 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a46:	e003      	b.n	8000a50 <P_LCD_2x16_Data+0xa4>
 8000a48:	6839      	ldr	r1, [r7, #0]
 8000a4a:	2005      	movs	r0, #5
 8000a4c:	f7ff fe5b 	bl	8000706 <P_LCD_2x16_PinLo>
 8000a50:	79fb      	ldrb	r3, [r7, #7]
 8000a52:	f003 0304 	and.w	r3, r3, #4
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d004      	beq.n	8000a64 <P_LCD_2x16_Data+0xb8>
 8000a5a:	6839      	ldr	r1, [r7, #0]
 8000a5c:	2004      	movs	r0, #4
 8000a5e:	f7ff fe71 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a62:	e003      	b.n	8000a6c <P_LCD_2x16_Data+0xc0>
 8000a64:	6839      	ldr	r1, [r7, #0]
 8000a66:	2004      	movs	r0, #4
 8000a68:	f7ff fe4d 	bl	8000706 <P_LCD_2x16_PinLo>
 8000a6c:	79fb      	ldrb	r3, [r7, #7]
 8000a6e:	f003 0302 	and.w	r3, r3, #2
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d004      	beq.n	8000a80 <P_LCD_2x16_Data+0xd4>
 8000a76:	6839      	ldr	r1, [r7, #0]
 8000a78:	2003      	movs	r0, #3
 8000a7a:	f7ff fe63 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a7e:	e003      	b.n	8000a88 <P_LCD_2x16_Data+0xdc>
 8000a80:	6839      	ldr	r1, [r7, #0]
 8000a82:	2003      	movs	r0, #3
 8000a84:	f7ff fe3f 	bl	8000706 <P_LCD_2x16_PinLo>
 8000a88:	79fb      	ldrb	r3, [r7, #7]
 8000a8a:	f003 0301 	and.w	r3, r3, #1
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d004      	beq.n	8000a9c <P_LCD_2x16_Data+0xf0>
 8000a92:	6839      	ldr	r1, [r7, #0]
 8000a94:	2002      	movs	r0, #2
 8000a96:	f7ff fe55 	bl	8000744 <P_LCD_2x16_PinHi>
 8000a9a:	e003      	b.n	8000aa4 <P_LCD_2x16_Data+0xf8>
 8000a9c:	6839      	ldr	r1, [r7, #0]
 8000a9e:	2002      	movs	r0, #2
 8000aa0:	f7ff fe31 	bl	8000706 <P_LCD_2x16_PinLo>
 8000aa4:	6838      	ldr	r0, [r7, #0]
 8000aa6:	f7ff fec0 	bl	800082a <P_LCD_2x16_Clk>
 8000aaa:	bf00      	nop
 8000aac:	3708      	adds	r7, #8
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bd80      	pop	{r7, pc}
	...

08000ab4 <Reset_Handler>:
 8000ab4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000aec <LoopFillZerobss+0x14>
 8000ab8:	2100      	movs	r1, #0
 8000aba:	e003      	b.n	8000ac4 <LoopCopyDataInit>

08000abc <CopyDataInit>:
 8000abc:	4b0c      	ldr	r3, [pc, #48]	; (8000af0 <LoopFillZerobss+0x18>)
 8000abe:	585b      	ldr	r3, [r3, r1]
 8000ac0:	5043      	str	r3, [r0, r1]
 8000ac2:	3104      	adds	r1, #4

08000ac4 <LoopCopyDataInit>:
 8000ac4:	480b      	ldr	r0, [pc, #44]	; (8000af4 <LoopFillZerobss+0x1c>)
 8000ac6:	4b0c      	ldr	r3, [pc, #48]	; (8000af8 <LoopFillZerobss+0x20>)
 8000ac8:	1842      	adds	r2, r0, r1
 8000aca:	429a      	cmp	r2, r3
 8000acc:	d3f6      	bcc.n	8000abc <CopyDataInit>
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LoopFillZerobss+0x24>)
 8000ad0:	e002      	b.n	8000ad8 <LoopFillZerobss>

08000ad2 <FillZerobss>:
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	f842 3b04 	str.w	r3, [r2], #4

08000ad8 <LoopFillZerobss>:
 8000ad8:	4b09      	ldr	r3, [pc, #36]	; (8000b00 <LoopFillZerobss+0x28>)
 8000ada:	429a      	cmp	r2, r3
 8000adc:	d3f9      	bcc.n	8000ad2 <FillZerobss>
 8000ade:	f000 f841 	bl	8000b64 <SystemInit>
 8000ae2:	f000 f8f1 	bl	8000cc8 <__libc_init_array>
 8000ae6:	f7ff fc59 	bl	800039c <main>
 8000aea:	4770      	bx	lr
 8000aec:	20030000 	.word	0x20030000
 8000af0:	08000de4 	.word	0x08000de4
 8000af4:	20000000 	.word	0x20000000
 8000af8:	20000000 	.word	0x20000000
 8000afc:	20000000 	.word	0x20000000
 8000b00:	2000001c 	.word	0x2000001c

08000b04 <ADC_IRQHandler>:
 8000b04:	e7fe      	b.n	8000b04 <ADC_IRQHandler>

08000b06 <NMI_Handler>:
 8000b06:	b480      	push	{r7}
 8000b08:	af00      	add	r7, sp, #0
 8000b0a:	bf00      	nop
 8000b0c:	46bd      	mov	sp, r7
 8000b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b12:	4770      	bx	lr

08000b14 <HardFault_Handler>:
 8000b14:	b480      	push	{r7}
 8000b16:	af00      	add	r7, sp, #0
 8000b18:	e7fe      	b.n	8000b18 <HardFault_Handler+0x4>

08000b1a <MemManage_Handler>:
 8000b1a:	b480      	push	{r7}
 8000b1c:	af00      	add	r7, sp, #0
 8000b1e:	e7fe      	b.n	8000b1e <MemManage_Handler+0x4>

08000b20 <BusFault_Handler>:
 8000b20:	b480      	push	{r7}
 8000b22:	af00      	add	r7, sp, #0
 8000b24:	e7fe      	b.n	8000b24 <BusFault_Handler+0x4>

08000b26 <UsageFault_Handler>:
 8000b26:	b480      	push	{r7}
 8000b28:	af00      	add	r7, sp, #0
 8000b2a:	e7fe      	b.n	8000b2a <UsageFault_Handler+0x4>

08000b2c <SVC_Handler>:
 8000b2c:	b480      	push	{r7}
 8000b2e:	af00      	add	r7, sp, #0
 8000b30:	bf00      	nop
 8000b32:	46bd      	mov	sp, r7
 8000b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b38:	4770      	bx	lr

08000b3a <DebugMon_Handler>:
 8000b3a:	b480      	push	{r7}
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	bf00      	nop
 8000b40:	46bd      	mov	sp, r7
 8000b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b46:	4770      	bx	lr

08000b48 <PendSV_Handler>:
 8000b48:	b480      	push	{r7}
 8000b4a:	af00      	add	r7, sp, #0
 8000b4c:	bf00      	nop
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b54:	4770      	bx	lr

08000b56 <SysTick_Handler>:
 8000b56:	b480      	push	{r7}
 8000b58:	af00      	add	r7, sp, #0
 8000b5a:	bf00      	nop
 8000b5c:	46bd      	mov	sp, r7
 8000b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b62:	4770      	bx	lr

08000b64 <SystemInit>:
 8000b64:	b580      	push	{r7, lr}
 8000b66:	af00      	add	r7, sp, #0
 8000b68:	4a16      	ldr	r2, [pc, #88]	; (8000bc4 <SystemInit+0x60>)
 8000b6a:	4b16      	ldr	r3, [pc, #88]	; (8000bc4 <SystemInit+0x60>)
 8000b6c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000b70:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000b74:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000b78:	4a13      	ldr	r2, [pc, #76]	; (8000bc8 <SystemInit+0x64>)
 8000b7a:	4b13      	ldr	r3, [pc, #76]	; (8000bc8 <SystemInit+0x64>)
 8000b7c:	681b      	ldr	r3, [r3, #0]
 8000b7e:	f043 0301 	orr.w	r3, r3, #1
 8000b82:	6013      	str	r3, [r2, #0]
 8000b84:	4b10      	ldr	r3, [pc, #64]	; (8000bc8 <SystemInit+0x64>)
 8000b86:	2200      	movs	r2, #0
 8000b88:	609a      	str	r2, [r3, #8]
 8000b8a:	4a0f      	ldr	r2, [pc, #60]	; (8000bc8 <SystemInit+0x64>)
 8000b8c:	4b0e      	ldr	r3, [pc, #56]	; (8000bc8 <SystemInit+0x64>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000b94:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000b98:	6013      	str	r3, [r2, #0]
 8000b9a:	4b0b      	ldr	r3, [pc, #44]	; (8000bc8 <SystemInit+0x64>)
 8000b9c:	4a0b      	ldr	r2, [pc, #44]	; (8000bcc <SystemInit+0x68>)
 8000b9e:	605a      	str	r2, [r3, #4]
 8000ba0:	4a09      	ldr	r2, [pc, #36]	; (8000bc8 <SystemInit+0x64>)
 8000ba2:	4b09      	ldr	r3, [pc, #36]	; (8000bc8 <SystemInit+0x64>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000baa:	6013      	str	r3, [r2, #0]
 8000bac:	4b06      	ldr	r3, [pc, #24]	; (8000bc8 <SystemInit+0x64>)
 8000bae:	2200      	movs	r2, #0
 8000bb0:	60da      	str	r2, [r3, #12]
 8000bb2:	f000 f80d 	bl	8000bd0 <SetSysClock>
 8000bb6:	4b03      	ldr	r3, [pc, #12]	; (8000bc4 <SystemInit+0x60>)
 8000bb8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000bbc:	609a      	str	r2, [r3, #8]
 8000bbe:	bf00      	nop
 8000bc0:	bd80      	pop	{r7, pc}
 8000bc2:	bf00      	nop
 8000bc4:	e000ed00 	.word	0xe000ed00
 8000bc8:	40023800 	.word	0x40023800
 8000bcc:	24003010 	.word	0x24003010

08000bd0 <SetSysClock>:
 8000bd0:	b480      	push	{r7}
 8000bd2:	b083      	sub	sp, #12
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	607b      	str	r3, [r7, #4]
 8000bda:	2300      	movs	r3, #0
 8000bdc:	603b      	str	r3, [r7, #0]
 8000bde:	4a36      	ldr	r2, [pc, #216]	; (8000cb8 <SetSysClock+0xe8>)
 8000be0:	4b35      	ldr	r3, [pc, #212]	; (8000cb8 <SetSysClock+0xe8>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000be8:	6013      	str	r3, [r2, #0]
 8000bea:	4b33      	ldr	r3, [pc, #204]	; (8000cb8 <SetSysClock+0xe8>)
 8000bec:	681b      	ldr	r3, [r3, #0]
 8000bee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000bf2:	603b      	str	r3, [r7, #0]
 8000bf4:	687b      	ldr	r3, [r7, #4]
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	607b      	str	r3, [r7, #4]
 8000bfa:	683b      	ldr	r3, [r7, #0]
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d103      	bne.n	8000c08 <SetSysClock+0x38>
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8000c06:	d1f0      	bne.n	8000bea <SetSysClock+0x1a>
 8000c08:	4b2b      	ldr	r3, [pc, #172]	; (8000cb8 <SetSysClock+0xe8>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000c10:	2b00      	cmp	r3, #0
 8000c12:	d002      	beq.n	8000c1a <SetSysClock+0x4a>
 8000c14:	2301      	movs	r3, #1
 8000c16:	603b      	str	r3, [r7, #0]
 8000c18:	e001      	b.n	8000c1e <SetSysClock+0x4e>
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	603b      	str	r3, [r7, #0]
 8000c1e:	683b      	ldr	r3, [r7, #0]
 8000c20:	2b01      	cmp	r3, #1
 8000c22:	d142      	bne.n	8000caa <SetSysClock+0xda>
 8000c24:	4a24      	ldr	r2, [pc, #144]	; (8000cb8 <SetSysClock+0xe8>)
 8000c26:	4b24      	ldr	r3, [pc, #144]	; (8000cb8 <SetSysClock+0xe8>)
 8000c28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c2a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000c2e:	6413      	str	r3, [r2, #64]	; 0x40
 8000c30:	4a22      	ldr	r2, [pc, #136]	; (8000cbc <SetSysClock+0xec>)
 8000c32:	4b22      	ldr	r3, [pc, #136]	; (8000cbc <SetSysClock+0xec>)
 8000c34:	681b      	ldr	r3, [r3, #0]
 8000c36:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000c3a:	6013      	str	r3, [r2, #0]
 8000c3c:	4a1e      	ldr	r2, [pc, #120]	; (8000cb8 <SetSysClock+0xe8>)
 8000c3e:	4b1e      	ldr	r3, [pc, #120]	; (8000cb8 <SetSysClock+0xe8>)
 8000c40:	689b      	ldr	r3, [r3, #8]
 8000c42:	6093      	str	r3, [r2, #8]
 8000c44:	4a1c      	ldr	r2, [pc, #112]	; (8000cb8 <SetSysClock+0xe8>)
 8000c46:	4b1c      	ldr	r3, [pc, #112]	; (8000cb8 <SetSysClock+0xe8>)
 8000c48:	689b      	ldr	r3, [r3, #8]
 8000c4a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000c4e:	6093      	str	r3, [r2, #8]
 8000c50:	4a19      	ldr	r2, [pc, #100]	; (8000cb8 <SetSysClock+0xe8>)
 8000c52:	4b19      	ldr	r3, [pc, #100]	; (8000cb8 <SetSysClock+0xe8>)
 8000c54:	689b      	ldr	r3, [r3, #8]
 8000c56:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8000c5a:	6093      	str	r3, [r2, #8]
 8000c5c:	4b16      	ldr	r3, [pc, #88]	; (8000cb8 <SetSysClock+0xe8>)
 8000c5e:	4a18      	ldr	r2, [pc, #96]	; (8000cc0 <SetSysClock+0xf0>)
 8000c60:	605a      	str	r2, [r3, #4]
 8000c62:	4a15      	ldr	r2, [pc, #84]	; (8000cb8 <SetSysClock+0xe8>)
 8000c64:	4b14      	ldr	r3, [pc, #80]	; (8000cb8 <SetSysClock+0xe8>)
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000c6c:	6013      	str	r3, [r2, #0]
 8000c6e:	bf00      	nop
 8000c70:	4b11      	ldr	r3, [pc, #68]	; (8000cb8 <SetSysClock+0xe8>)
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d0f9      	beq.n	8000c70 <SetSysClock+0xa0>
 8000c7c:	4b11      	ldr	r3, [pc, #68]	; (8000cc4 <SetSysClock+0xf4>)
 8000c7e:	f240 7205 	movw	r2, #1797	; 0x705
 8000c82:	601a      	str	r2, [r3, #0]
 8000c84:	4a0c      	ldr	r2, [pc, #48]	; (8000cb8 <SetSysClock+0xe8>)
 8000c86:	4b0c      	ldr	r3, [pc, #48]	; (8000cb8 <SetSysClock+0xe8>)
 8000c88:	689b      	ldr	r3, [r3, #8]
 8000c8a:	f023 0303 	bic.w	r3, r3, #3
 8000c8e:	6093      	str	r3, [r2, #8]
 8000c90:	4a09      	ldr	r2, [pc, #36]	; (8000cb8 <SetSysClock+0xe8>)
 8000c92:	4b09      	ldr	r3, [pc, #36]	; (8000cb8 <SetSysClock+0xe8>)
 8000c94:	689b      	ldr	r3, [r3, #8]
 8000c96:	f043 0302 	orr.w	r3, r3, #2
 8000c9a:	6093      	str	r3, [r2, #8]
 8000c9c:	bf00      	nop
 8000c9e:	4b06      	ldr	r3, [pc, #24]	; (8000cb8 <SetSysClock+0xe8>)
 8000ca0:	689b      	ldr	r3, [r3, #8]
 8000ca2:	f003 030c 	and.w	r3, r3, #12
 8000ca6:	2b08      	cmp	r3, #8
 8000ca8:	d1f9      	bne.n	8000c9e <SetSysClock+0xce>
 8000caa:	bf00      	nop
 8000cac:	370c      	adds	r7, #12
 8000cae:	46bd      	mov	sp, r7
 8000cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop
 8000cb8:	40023800 	.word	0x40023800
 8000cbc:	40007000 	.word	0x40007000
 8000cc0:	07405a19 	.word	0x07405a19
 8000cc4:	40023c00 	.word	0x40023c00

08000cc8 <__libc_init_array>:
 8000cc8:	b570      	push	{r4, r5, r6, lr}
 8000cca:	4e0d      	ldr	r6, [pc, #52]	; (8000d00 <__libc_init_array+0x38>)
 8000ccc:	4c0d      	ldr	r4, [pc, #52]	; (8000d04 <__libc_init_array+0x3c>)
 8000cce:	1ba4      	subs	r4, r4, r6
 8000cd0:	10a4      	asrs	r4, r4, #2
 8000cd2:	2500      	movs	r5, #0
 8000cd4:	42a5      	cmp	r5, r4
 8000cd6:	d109      	bne.n	8000cec <__libc_init_array+0x24>
 8000cd8:	4e0b      	ldr	r6, [pc, #44]	; (8000d08 <__libc_init_array+0x40>)
 8000cda:	4c0c      	ldr	r4, [pc, #48]	; (8000d0c <__libc_init_array+0x44>)
 8000cdc:	f000 f824 	bl	8000d28 <_init>
 8000ce0:	1ba4      	subs	r4, r4, r6
 8000ce2:	10a4      	asrs	r4, r4, #2
 8000ce4:	2500      	movs	r5, #0
 8000ce6:	42a5      	cmp	r5, r4
 8000ce8:	d105      	bne.n	8000cf6 <__libc_init_array+0x2e>
 8000cea:	bd70      	pop	{r4, r5, r6, pc}
 8000cec:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000cf0:	4798      	blx	r3
 8000cf2:	3501      	adds	r5, #1
 8000cf4:	e7ee      	b.n	8000cd4 <__libc_init_array+0xc>
 8000cf6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000cfa:	4798      	blx	r3
 8000cfc:	3501      	adds	r5, #1
 8000cfe:	e7f2      	b.n	8000ce6 <__libc_init_array+0x1e>
 8000d00:	08000ddc 	.word	0x08000ddc
 8000d04:	08000ddc 	.word	0x08000ddc
 8000d08:	08000ddc 	.word	0x08000ddc
 8000d0c:	08000de0 	.word	0x08000de0

08000d10 <memcpy>:
 8000d10:	b510      	push	{r4, lr}
 8000d12:	1e43      	subs	r3, r0, #1
 8000d14:	440a      	add	r2, r1
 8000d16:	4291      	cmp	r1, r2
 8000d18:	d100      	bne.n	8000d1c <memcpy+0xc>
 8000d1a:	bd10      	pop	{r4, pc}
 8000d1c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8000d20:	f803 4f01 	strb.w	r4, [r3, #1]!
 8000d24:	e7f7      	b.n	8000d16 <memcpy+0x6>
	...

08000d28 <_init>:
 8000d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2a:	bf00      	nop
 8000d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d2e:	bc08      	pop	{r3}
 8000d30:	469e      	mov	lr, r3
 8000d32:	4770      	bx	lr

08000d34 <_fini>:
 8000d34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d36:	bf00      	nop
 8000d38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d3a:	bc08      	pop	{r3}
 8000d3c:	469e      	mov	lr, r3
 8000d3e:	4770      	bx	lr
